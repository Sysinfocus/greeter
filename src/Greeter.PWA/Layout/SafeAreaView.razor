<style>
    .sbc-safe-area {
        position: absolute;
        left: 0;
        top: 0;
        width: 100dvw;
        height: 100dvh;
        overflow: auto;
        padding-top: calc(1rem + env(safe-area-inset-top));
        padding-bottom: calc(1rem + env(safe-area-inset-bottom));
        padding-left: calc(1rem + env(safe-area-inset-left));
        padding-right: calc(1rem + env(safe-area-inset-right));
    }
</style>

<div class="sbc-safe-area" @onclick="OnClick">
    @ChildContent
</div>

@code
{
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> OnClick { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await initialization.InitializeTheme();
            var currentTheme = initialization.CurrentTheme;
            var color = currentTheme == "light" ? "#fff" : "#111";
            await browserExtensions.EvalVoid($"document.querySelector('meta[name=theme-color]').content = '{color}'");
        }
    }
}